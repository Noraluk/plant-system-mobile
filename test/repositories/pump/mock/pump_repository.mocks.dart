// Mocks generated by Mockito 5.0.16 from annotations
// in plant_system_mobile/test/screens/home_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:plant_system_mobile/models/pump/pump_query_model.dart' as _i5;
import 'package:plant_system_mobile/models/pump/pump_response_model.dart'
    as _i2;
import 'package:plant_system_mobile/repositories/pump/pump_repository.dart'
    as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakePumpResponseModel_0 extends _i1.Fake
    implements _i2.PumpResponseModel {}

/// A class which mocks [PumpRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPumpRepository extends _i1.Mock implements _i3.PumpRepository {
  MockPumpRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.PumpResponseModel> getPump(
          {int? pumpID, _i5.PumpQueryModel? query}) =>
      (super.noSuchMethod(
        Invocation.method(#getPump, [], {#pumpID: pumpID, #query: query}),
        returnValue: Future<_i2.PumpResponseModel>.value(
          _FakePumpResponseModel_0(),
        ),
        returnValueForMissingStub: Future<_i2.PumpResponseModel>.value(
          _FakePumpResponseModel_0(),
        ),
      ) as _i4.Future<_i2.PumpResponseModel>);
}
