// Mocks generated by Mockito 5.0.16 from annotations
// in plant_system_mobile/test/blocs/pump/pump_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:plant_system_mobile/models/pump/pump_activated_request_model/pump_activated_request_model.dart'
    as _i6;
import 'package:plant_system_mobile/models/pump/pump_activated_response_model/pump_activated_response_model.dart'
    as _i2;
import 'package:plant_system_mobile/models/pump/pump_model/pump_model.dart'
    as _i3;
import 'package:plant_system_mobile/repositories/pump/pump_repository.dart'
    as _i4;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakePumpActivatedResponseModel_0 extends _i1.Fake
    implements _i2.PumpActivatedResponseModel {}

class _FakePumpModel_1 extends _i1.Fake implements _i3.PumpModel {}

/// A class which mocks [PumpRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPumpRepository extends _i1.Mock implements _i4.PumpRepository {
  MockPumpRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.PumpActivatedResponseModel> activePump(
          {int? id, _i6.PumpActivatedRequestModel? body}) =>
      (super.noSuchMethod(
        Invocation.method(#activePump, [], {#id: id, #body: body}),
        returnValue: Future<_i2.PumpActivatedResponseModel>.value(
            _FakePumpActivatedResponseModel_0()),
        returnValueForMissingStub: Future<_i2.PumpActivatedResponseModel>.value(
            _FakePumpActivatedResponseModel_0()),
      ) as _i5.Future<_i2.PumpActivatedResponseModel>);
  @override
  _i5.Future<_i3.PumpModel> getPump({int? id}) =>
      (super.noSuchMethod(Invocation.method(#getPump, [], {#id: id}),
              returnValue: Future<_i3.PumpModel>.value(_FakePumpModel_1()))
          as _i5.Future<_i3.PumpModel>);
  @override
  String toString() => super.toString();
}
